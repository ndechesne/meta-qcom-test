on:
  workflow_call:
    inputs:
      host:
        required: true
        type: string
      images:
        required: true
        type: string
      machines:
        required: true
        type: string
      url:
        required: true
        type: string
      branch:
        required: true
        type: string
      ref:
        required: true
        type: string
    secrets:
      TUXSUITE_TOKEN:
        required: true

env:
  POKY_URL: http://git.yoctoproject.org/git/poky
  DISTRO: poky

jobs:
  meta-qcom-premerge-build-test:
    name: ${{ matrix.machine }}/${{ matrix.tclibc }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        machine: ${{ fromJson(inputs.machines) }}
        tclibc: [glibc, musl]
    steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade tuxsuite
    - name: Setup tux definition
      env:
        MACHINE: ${{ matrix.machine }}
        TCLIBC: ${{ matrix.tclibc }}
        REF: ${{ inputs.ref }}
        IMAGES: ${{ inputs.images }}
        HOST: ${{ inputs.host }}
        BRANCH: $${{ inputs.branch }}
        URL: $${{ inputs.url }}
      run: |
        cat << EOF > tux.json
        {
          "sources": {
            "git_trees": [
              {
                "url": "$POKY_URL",
                "branch": "$BRANCH"
              },
              {
                "url": "$URL,
                "ref": "$REF"
              }
            ]
          },
          "container": "$HOST",
          "envsetup": "poky/oe-init-build-env",
          "distro": "$DISTRO",
          "machine": "$MACHINE",
          "target": "$IMAGES",
          "bblayers_conf": [
            "BBLAYERS += '../meta-qcom/'"
          ],
          "artifacts": [
            "\$DEPLOY_DIR"
          ],
            "environment": {
          },
          "local_conf": [
            "INHERIT += 'buildstats buildstats-summary'",
            "TCLIBC := '$TCLIBC'"
          ]
        }
        EOF
    - name: Run build
      run: |
        cat tux.json
        echo tuxsuite bake submit tux.json
      env:
        TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
